// Generated by typings
// Source: https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/7de6c3dd94feaeb21f20054b9f30d5dabc5efabd/redux-actions/redux-actions.d.ts
// Type definitions for redux-actions v0.8.0
// Project: https://github.com/acdlite/redux-actions
// Definitions by: Jack Hsu <https://github.com/jaysoo>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped

declare namespace ReduxActions {
    // FSA-compliant action.
    // See: https://github.com/acdlite/flux-standard-action
    export interface IAction<T> {
        type: string
        payload?: T
        error?: boolean
        meta?: any
    }

    type PayloadCreator<T> = (...args: any[]) => T;
    type MetaCreator = (...args: any[]) => any;

    type Reducer<T, U> = (state: T, action: IAction<U>) => T;

    type ReducerMap<T> = {
        [actionType: string]: Reducer<T, any>
    };

    export function createAction<T>(actionType: string, payloadCreator?: PayloadCreator<T>, metaCreator?: MetaCreator): (...args: any[]) => IAction<T>;

    export function handleAction<T, U>(actionType: string, reducer: Reducer<T, U> | ReducerMap<T>): Reducer<T, any>;

    export function handleActions<T>(reducerMap: ReducerMap<T>, initialState?: T): Reducer<T, any>;
}

declare module "redux-actions" {
    export = ReduxActions;
}